# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package [Combo]

on:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  deploy:
    permissions:
      id-token: write

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Determine Repository
      id: wrepo
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          echo -e "PYPI_REPO=https://upload.pypi.org/legacy/" >> ${GITHUB_OUTPUT}
        else
          echo -e "PYPI_REPO=https://test.pypi.org/legacy/" >> ${GITHUB_OUTPUT}
        fi

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: ".python-version"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    - name: Install the Project
      run: uv sync --locked --all-extras --dev

    - name: Run Tests
      run: uv run coverage run ./run_tests.py

    - name: Build
      run: uv build

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        #user: __token__
        #password: ${{ secrets.STAG_PYPI_TOKEN }}
        repository-url: ${{ steps.wrepo.outputs.PYPI_REPO }}
        verbose: true
